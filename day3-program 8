#Given an array of strings strs, group the anagrams together. You can return the answer in any order. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. strs[i] consists of lowercase English letter


def anagram(li):
    dictionary={}
    for word in li:
        sortedword=''.join(sorted(word))
        print(sortedword)
        if sortedword not in dictionary:
            dictionary[sortedword]=[word]
        else:
           dictionary[sortedword]+=[word]
        return[dictionary[i] for i in dictionary]
li=['pop','bat','tab','opp']
print(anagrame(li))

Output:
opp
[['pop']]

10. Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2. You have the following three operations permitted on a word: 
•Insert a character 
•Delete a character 
•Replace a character
Program:
def editDistance(str1, str2, m, n):
   if m == 0:
        return n
  if n == 0:
        return m
 if str1[m-1] == str2[n-1]:
        return editDistance(str1, str2, m-1, n-1)
 return 1 + min(editDistance(str1, str2, m, n-1),    # Insert
                   editDistance(str1, str2, m-1, n),    # Remove
                   editDistance(str1, str2, m-1, n-1)    # Replace
                   )
 # Driver code
str1 = "sunday"
str2 = "saturday"
print (editDistance(str1, str2, len(str1), len(str2)))
